<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="798" height="383" initialize="initApp()" creationComplete="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			
			import mx.collections.ArrayCollection;
			
			private var fileRef:FileReference;
			private var ba:ByteArray;
			private var xlsFile:ExcelFile;
			private var hdrs:Array;
			private var runOnce:Boolean;
			
			[Bindable]
			private var xlsSheet:ArrayCollection;
			private const XLS_FILTER:FileFilter = new FileFilter("EXCEL FILES(*.xls)","*.xls");
			
			private function init():void
			{
				fileRef = new FileReference();
				fileRef.addEventListener(Event.SELECT, fileRef_select);
				fileRef.addEventListener(ProgressEvent.PROGRESS, fileRef_progress);
				fileRef.addEventListener(Event.COMPLETE, fileRef_complete);
				
				ba = new ByteArray();
				hdrs = new Array();
				xlsSheet = new ArrayCollection();
			}
			
			private function browseAndUpload():void
			{
				fileRef.browse([XLS_FILTER]);
				message.text = "";
			}
			private function fileRef_select(evt:Event):void
			{
				try
				{
					message.text = "size(bytes): "+ fileRef.size;
					message.text += "|" + fileRef.name;
					fileRef.load();
				} catch(err:Error) {
					message.text = "ERROR: zero-byte file";
				}
			}
			private function fileRef_progress(evt:ProgressEvent):void
			{
				progressBar.visible = true;
			}
			private function fileRef_complete(evt:Event):void
			{
				try
				{
					xlsFile = new ExcelFile();
					
					message.text += " (complete)";
					progressBar.visible = false;
					
					ba = fileRef["data"];
					xlsFile.loadFromByteArray(ba);
					xlsSheet = xlsFile.sheets[0].values;
					
					hdrs = xlsSheet[0];
					xlsSheet.removeItemAt(0);
					
					grid.dataProvider = xlsSheet;
				} catch(err:Error){
					message.text = "An error occured";
				}
			}
			private function updateHeaders():void
			{
				if(grid.columnCount>=1) {
					for(var i:int=0; i<= grid.columnCount-1; i++) {
						grid.columns[i].headerText=hdrs[i];
					}
				}
			}
			
			import com.quetwo.Arduino.ArduinoConnector;
			import com.quetwo.Arduino.ArduinoConnectorEvent;
			private var comport:ArduinoConnector;
			private function initApp():void
			{
				comport = new ArduinoConnector();
				comport.connect("COM1",9600);
				comport.addEventListener("socketData",getRFdata);
			}
			protected function getRFdata(event:ArduinoConnectorEvent):void
			{
				rfID.text += comport.readBytesAsString();
			}
		]]>
	</fx:Script>
	<s:TextArea id="rfID" x="52" y="94"/>
	<s:Button x="539" y="32" label="Upload File" click="browseAndUpload()" />
	<s:Label id="message" x="336" y="78" width="419" height="34" text="Label"/>
	<mx:ProgressBar id="progressBar" x="327" y="327" visible="false" indeterminate="true"/>
	<mx:DataGrid id="grid" x="327" y="121" width="438" height="205" editable="true"
				 updateComplete="updateHeaders();"/>
</s:WindowedApplication>
